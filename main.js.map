{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/compp/compp.component.ts","./src/app/compp/compp.component.html","./src/app/serv-com.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n export class AppComponent {\n  title = 'yellow';\n\n  arrayde=[\"nana\",\"nani\",\"anty\",\"mama\"]\n}\n","\n<h1>All Name & Phone</h1>\n<hr/>\n<div>\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"collapse\" data-target=\"#demo1\">Papa</button>\n  <div  id=\"demo1\" class=\"collapse\">\n    Phone number : 1379123123123\n</div>\n</div>\n<div>\n <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"collapse\" data-target=\"#demo2\">Farin</button>\n  <div  id=\"demo2\" class=\"collapse\">\n    Phone number : 1379123123123\n  </div>\n</div>\n<app-compp></app-compp>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ComppComponent } from './compp/compp.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ServComService} from '../serv-com.service';\n@Component({\n  selector: 'app-compp',\n  templateUrl: './compp.component.html',\n  styleUrls: ['./compp.component.css']\n})\nexport class ComppComponent implements OnInit {\n\n  constructor(private serv:ServComService) { }\n\n  ngOnInit(): void {\n  }\n  hellow()\n  {\n    this.serv.sayHellow();\n  }\n}\n","<p>compp works!</p>\n<button (click)=\"hellow()\">hellowwow</button>","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ServComService {\n\n  constructor() { }\n  sayHellow()\n  {\n    alert(\"Hi at serviiice\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}